use mongodb::bson::oid::ObjectId;
use serde::{Deserialize, Serialize};
use std::convert::TryFrom;

#[derive(Debug, Serialize, Deserialize)]
pub struct PoolSwapHistory {
    pub _id: ObjectId,
    pub pool: String, 
    pub start_time: i64,
    pub end_time: i64,
    pub to_asset_count: i64,
    pub to_rune_count: i64,
    pub to_trade_count: i64,
    pub from_trade_count: i64,
    pub synth_mint_count: i64,
    pub synth_redeem_count: i64,
    pub total_count: i64,
    pub to_asset_volume: f64,
    pub to_rune_volume: f64,
    pub to_trade_volume: f64,
    pub from_trade_volume: f64,
    pub synth_mint_volume: f64,
    pub synth_redeem_volume: f64,
    pub total_volume: f64,
    pub to_asset_volume_usd: f64,
    pub to_rune_volume_usd: f64,
    pub to_trade_volume_usd: f64,
    pub from_trade_volume_usd: f64,
    pub synth_mint_volume_usd: f64,
    pub synth_redeem_volume_usd: f64,
    pub total_volume_usd: f64,
    pub to_asset_fees: f64,
    pub to_rune_fees: f64,
    pub to_trade_fees: f64,
    pub from_trade_fees: f64,
    pub synth_mint_fees: f64,
    pub synth_redeem_fees: f64,
    pub total_fees: f64,
    pub to_asset_average_slip: f64,
    pub to_rune_average_slip: f64,
    pub to_trade_average_slip: f64,
    pub from_trade_average_slip: f64,
    pub synth_mint_average_slip: f64,
    pub synth_redeem_average_slip: f64,
    pub average_slip: f64,
    pub rune_price_usd: f64,
}

#[derive(Debug, Deserialize)]
pub struct PoolSwapHistoryRequest {
    pub pool: String,
    pub start_time: i64,
    pub end_time: i64,
    pub to_asset_count: i64,
    pub to_rune_count: i64,
    pub to_trade_count: i64,
    pub from_trade_count: i64,
    pub synth_mint_count: i64,
    pub synth_redeem_count: i64,
    pub total_count: i64,
    pub to_asset_volume: f64,
    pub to_rune_volume: f64,
    pub to_trade_volume: f64,
    pub from_trade_volume: f64,
    pub synth_mint_volume: f64,
    pub synth_redeem_volume: f64,
    pub total_volume: f64,
    pub to_asset_volume_usd: f64,
    pub to_rune_volume_usd: f64,
    pub to_trade_volume_usd: f64,
    pub from_trade_volume_usd: f64,
    pub synth_mint_volume_usd: f64,
    pub synth_redeem_volume_usd: f64,
    pub total_volume_usd: f64,
    pub to_asset_fees: f64,
    pub to_rune_fees: f64,
    pub to_trade_fees: f64,
    pub from_trade_fees: f64,
    pub synth_mint_fees: f64,
    pub synth_redeem_fees: f64,
    pub total_fees: f64,
    pub to_asset_average_slip: f64,
    pub to_rune_average_slip: f64,
    pub to_trade_average_slip: f64,
    pub from_trade_average_slip: f64,
    pub synth_mint_average_slip: f64,
    pub synth_redeem_average_slip: f64,
    pub average_slip: f64,
    pub rune_price_usd: f64,
}

impl TryFrom<PoolSwapHistoryRequest> for PoolSwapHistory {
    type Error = Box<dyn std::error::Error>;

    fn try_from(item: PoolSwapHistoryRequest) -> Result<Self, Self::Error> {
        Ok(Self {
            _id: ObjectId::new(),
            pool: item.pool,
            start_time: item.start_time,
            end_time: item.end_time,
            to_asset_count: item.to_asset_count,
            to_rune_count: item.to_rune_count,
            to_trade_count: item.to_trade_count,
            from_trade_count: item.from_trade_count,
            synth_mint_count: item.synth_mint_count,
            synth_redeem_count: item.synth_redeem_count,
            total_count: item.total_count,
            to_asset_volume: item.to_asset_volume,
            to_rune_volume: item.to_rune_volume,
            to_trade_volume: item.to_trade_volume,
            from_trade_volume: item.from_trade_volume,
            synth_mint_volume: item.synth_mint_volume,
            synth_redeem_volume: item.synth_redeem_volume,
            total_volume: item.total_volume,
            to_asset_volume_usd: item.to_asset_volume_usd,
            to_rune_volume_usd: item.to_rune_volume_usd,
            to_trade_volume_usd: item.to_trade_volume_usd,
            from_trade_volume_usd: item.from_trade_volume_usd,
            synth_mint_volume_usd: item.synth_mint_volume_usd,
            synth_redeem_volume_usd: item.synth_redeem_volume_usd,
            total_volume_usd: item.total_volume_usd,
            to_asset_fees: item.to_asset_fees,
            to_rune_fees: item.to_rune_fees,
            to_trade_fees: item.to_trade_fees,
            from_trade_fees: item.from_trade_fees,
            synth_mint_fees: item.synth_mint_fees,
            synth_redeem_fees: item.synth_redeem_fees,
            total_fees: item.total_fees,
            to_asset_average_slip: item.to_asset_average_slip,
            to_rune_average_slip: item.to_rune_average_slip,
            to_trade_average_slip: item.to_trade_average_slip,
            from_trade_average_slip: item.from_trade_average_slip,
            synth_mint_average_slip: item.synth_mint_average_slip,
            synth_redeem_average_slip: item.synth_redeem_average_slip,
            average_slip: item.average_slip,
            rune_price_usd: item.rune_price_usd,
        })
    }
}
